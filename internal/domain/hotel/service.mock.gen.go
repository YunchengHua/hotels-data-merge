// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package hotel is a generated GoMock package.
package hotel

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// FetchAll mocks base method.
func (m *MockService) FetchAll(ctx context.Context) (map[string]*Hotel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchAll", ctx)
	ret0, _ := ret[0].(map[string]*Hotel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchAll indicates an expected call of FetchAll.
func (mr *MockServiceMockRecorder) FetchAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchAll", reflect.TypeOf((*MockService)(nil).FetchAll), ctx)
}

// GetByDestinationIDs mocks base method.
func (m *MockService) GetByDestinationIDs(ctx context.Context, destinationIDs []int64) []*Hotel {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByDestinationIDs", ctx, destinationIDs)
	ret0, _ := ret[0].([]*Hotel)
	return ret0
}

// GetByDestinationIDs indicates an expected call of GetByDestinationIDs.
func (mr *MockServiceMockRecorder) GetByDestinationIDs(ctx, destinationIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByDestinationIDs", reflect.TypeOf((*MockService)(nil).GetByDestinationIDs), ctx, destinationIDs)
}

// GetByHotelIDs mocks base method.
func (m *MockService) GetByHotelIDs(ctx context.Context, hotelIDs []string) []*Hotel {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByHotelIDs", ctx, hotelIDs)
	ret0, _ := ret[0].([]*Hotel)
	return ret0
}

// GetByHotelIDs indicates an expected call of GetByHotelIDs.
func (mr *MockServiceMockRecorder) GetByHotelIDs(ctx, hotelIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByHotelIDs", reflect.TypeOf((*MockService)(nil).GetByHotelIDs), ctx, hotelIDs)
}
